;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ;;; Author      : Frank Tamborello;;; Copyright   : (c)2010 Frank Tamborello/;;;		: The University of Texas Health Science Center at Houston ;;;		: (UTHSC-H), All Rights Reserved;;; Availability: public domain;;; Address     : University of Texas Health Science Center at Houston;;;             : School of Health Information Sciences;;;		: 7000 Fannin, Ste. 600;;;             : Houston, TX 77030;;;             : franklin.tamborello@uth.tmc.edu;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; This library is free software; you can redistribute it and/or;;; modify it under the terms of the Lisp Lesser General Public;;; License: the GNU Lesser General Public License as published by the;;; Free Software Foundation (either version 2.1 of the License, ;;; or, at your option, any later version),;;; and the Franz, Inc Lisp-specific preamble.;;;;;; This library is distributed in the hope that it will be useful,;;; but WITHOUT ANY WARRANTY; without even the implied warranty of;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU;;; Lesser General Public License for more details.;;;;;; You should have received a copy of the Lisp Lesser General Public;;; License along with this library; if not, write to the Free Software;;; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA;;; and see Franz, Inc.'s preamble to the GNU Lesser General Public License,;;; http://opensource.franz.com/preamble.html.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ;;; Filename    : perceptual model.lisp;;; Version     : r7;;; ;;; Description : A very simple model to demonstrate the spatial module. ;;;		The task is: ;;;		1. Wait for instruction, find-square, find the square.;;;		2. Wait for instruction, find-square-relative-to-blue-arrow,;;;		do that.;;;		3. Wait for instruction, find-square-relative-to-red-arrow,;;;		do that.;;;;;; Usage	: Load the spatial module, exp2.lisp, and this file. Call do-exp.;;;;;; Bugs        : none;;; ;;; todo        : ;;; ;;; ----- History -----;;; 2010.06.23 fpt [r1];;;	: inception;;; 2010.06.23 fpt [r2];;;	: Rather than just sitting there after pressing a key, the model now ;;;	looks around for other objects of the same color that it just made a;;;	spatial-representation of, and if it finds one that has an intrinsic;;;	orientation, it encodes it and copies its orientation to a new imaginal;;;	buffer chunk of type eye-centered-spatial-representation. That way it ;;;	actively explores its environment a little, implenting FORMS' notion of ;;;	automatically generating intrinsic-spatial-representations, at least to;;;	some degree.;;;	: Does part 2: indicate bearing of square relative to the blue arrow;;; 2010.06.23 fpt [r3];;;	: Does through part 3;;; 2010.06.29 fpt [r4];;;	: Tests efor->imaginal copying mechanism of eye-centered-SR chunk ;;;	creation mechanism;;; 2010.06.29 fpt [r5];;;	: Generalized productions so that the three spatial questions can be ;;;	asked in any order;;;	: & name change to "perceptual model";;; 2010.06.30 fpt [r6];;;	: Works with r24 spatial module. See spatial.lisp's revision history;;;	for why this is significant.;;; 2010.06.30 fpt [r7];;;	: Works with r25 of the spatial module, which implements intrinsic;;;	buffer-stuffing.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(clear-all)(define-model chunk-spec-test-model    (sgp :v t :trace-detail medium :needs-mouse nil :show-focus t :er t :esc t)    (chunk-type spatial-task task state value color target)  (chunk-type (polygon-feature (:include visual-location)) regular)  (chunk-type (polygon (:include visual-object)) sides)  (chunk-type (square (:include polygon)) (sides 4))  (chunk-type (triangle (:include polygon)) (sides 3))  (chunk-type (intrinsic-visual-object (:include visual-object))                intrinsicality orientation)  (chunk-type (arrow                 (:include intrinsic-visual-object)) (intrinsicality t) sides)    (add-dm   (find-square isa spatial-task                task find-square state start value square color blue target square)   (find-square-relative-to-blue-arrow    isa spatial-task task find-square-relative-to-blue-arrow     state start value arrow color blue target square)   (find-square-relative-to-red-arrow    isa spatial-task task find-square-relative-to-red-arrow     state start value arrow color red target square))  (set-hand-location right 19 4)    (goal-focus find-square);;  (goal-focus find-square-relative-to-blue-arrow);;  (goal-focus find-square-relative-to-red-arrow)  (p find-square   =goal>   	isa spatial-task	task find-square        state start        value =val        color =col==>   =goal>   	state finding-location   +visual-location>	isa visual-location        value =val        color =col)(p find-square-relative-to-blue-arrow   =goal>	isa spatial-task        task find-square-relative-to-blue-arrow        state start        value =val        color =col==>   =goal>   	state finding-location   +visual-location>	isa visual-location        value =val        color =col)(p find-square-relative-to-red-arrow   =goal>	isa spatial-task        task find-square-relative-to-red-arrow        state start        value =val        color =col==>   =goal>   	state finding-location   +visual-location>	isa visual-location        value =val        color =col)(p attend-a-loc   =goal>	isa spatial-task        state finding-location   =visual-location>	isa visual-location==>   =goal>	state attending-location   +visual>	isa move-attention        screen-pos =visual-location)(p got-non-intrinsic-visual-make-spatial   =visual>	isa visual-object        value =val   ?spatial-object>	buffer empty   =goal>	isa spatial-task        state attending-location==>   +spatial-object>	isa spatial-object        shape =val        perceptual-reference =visual   =goal>   	state making-spatial-representations) (p got-intrinsic-visual-make-spatial   =visual>	isa intrinsic-visual-object        value =val        intrinsicality =int	orientation =ori   ?spatial-object>	buffer empty   =goal>	isa spatial-task        state attending-location==>   +spatial-object>	isa spatial-object        shape =val        intrinsicality =int	orientation =ori        perceptual-reference =visual   =goal>   	state making-spatial-representations)(p got-intrinsic-supporting-efor-find-unattended-of-same-color   =goal>	isa spatial-task        state making-spatial-representations        target =shp        color =col   =spatial-object>	isa spatial-object        intrinsicality t   ?imaginal>	buffer full   ?intrinsic>	buffer empty==>   +visual-location>	isa visual-location        color =col        value =shp        :attended nil   =goal>	   state finding-location)(p visual-location-error-find-another-location   =goal>	isa spatial-task        target =shp        color =col   ?visual-location>	state error ==>   +visual-location>	isa visual-location        - color =col        value =shp        :attended nil   =goal>	   state finding-location)(p target-not-yet-found-find-another-location   =goal>	isa spatial-task        target =shp        color =col   =spatial-object>	isa spatial-object        - shape =shp==>   +visual-location>	isa visual-location        value =shp        color =col   =goal>	state finding-location)(p no-intrinsic-respond-efor-left   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>	isa spatial-object        intrinsicality nil        shape =trg   ?intrinsic>	buffer empty   =eye-central>	isa eye-centered-spatial-representation        bearing left   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger index        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p no-intrinsic-respond-efor-right   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>	isa spatial-object        intrinsicality nil        shape =trg   ?intrinsic>	buffer empty   =eye-central>	isa eye-centered-spatial-representation        bearing right   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger ring        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p no-intrinsic-respond-afor-left   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>	isa spatial-object        intrinsicality nil        shape =trg   ?intrinsic>	buffer empty   =allocentral>	isa allocentric-spatial-representation        bearing left   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger index        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p no-intrinsic-respond-afor-right   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>	isa spatial-object        intrinsicality nil        shape =trg   ?intrinsic>	buffer empty   =allocentral>	isa allocentric-spatial-representation        bearing right   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger ring        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p has-intrinsic-respond-intrinsic-left   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>   	isa spatial-object        shape =trg   ?intrinsic>	buffer full   =intrinsic>	isa intrinsic-spatial-representation        bearing left   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger index        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p has-intrinsic-respond-intrinsic-right   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>   	isa spatial-object        shape =trg   ?intrinsic>	buffer full   =intrinsic>	isa intrinsic-spatial-representation        bearing right   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger ring        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p has-intrinsic-respond-egocentric-left   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>   	isa spatial-object        shape =trg   ?intrinsic>	buffer full   =eye-central>	isa eye-centered-spatial-representation        bearing left   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger index        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p has-intrinsic-respond-egocentric-right   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>   	isa spatial-object        shape =trg   ?intrinsic>	buffer full   =eye-central>	isa eye-centered-spatial-representation        bearing right   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger ring        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p has-intrinsic-respond-allocentric-left   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>   	isa spatial-object        shape =trg   ?intrinsic>	buffer full   =allocentral>	isa allocentric-spatial-representation        bearing left   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger index        r 0        theta 0   =goal>	state responded   +visual>	isa clear)(p has-intrinsic-respond-allocentric-right   =goal>	isa spatial-task        state making-spatial-representations        target =trg   =spatial-object>   	isa spatial-object        shape =trg   ?intrinsic>	buffer full   =allocentral>	isa allocentric-spatial-representation        bearing right   ?manual>	preparation free==>   +manual>	isa peck-recoil        hand right        finger ring        r 0        theta 0   =goal>	state responded   +visual>	isa clear)  (spp got-intrinsic-visual-make-spatial :u 1))